@using EntityFrameworkVsCoreDapper.Results
@model IEnumerable<ResultView>

<h1>Select Single Objects</h1>
<last-result last-result="@ViewBag.LastResult"></last-result>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Dapper</th>
            <th scope="col">Ef 6</th>
            <th scope="col">Ef Core</th>
            <th scope="col">Ef Core AsNoTracking</th>
            <th scope="col">Ef Core AsNoTracking Hard Sql</th>
        </tr>
    </thead>
    <tbody>
        @{
            @foreach (var num in Model)
            {
                <tr>
                    <td>@num.EFCore.Interactions</td>

                    <cell-result action-name="SelectProductDapper" controller-name="Singles" result-view="@num"></cell-result>
                    <cell-result action-name="SelectProductEf6" controller-name="Singles" result-view="@num"></cell-result>
                    <cell-result action-name="SelectProductEfCore" controller-name="Singles" result-view="@num"></cell-result>
                    <cell-result action-name="SelectProductEfCoreAsNoTracking" controller-name="Singles" result-view="@num"></cell-result>
                    <cell-result action-name="SelectProductEfCoreAsNoTrackingHardSql" controller-name="Singles" result-view="@num"></cell-result>
                </tr>
            }
        }
    </tbody>
</table>



